{
    "topic": "Data Mining",
    "pageNumber": "5",
    "type": "Data Mining - Indicator Frameworks",
    "definition": {
        "text": "Indicator Bots are ready to run custom code, or run code provided by a framework in order to do their job.",
        "updated": 1621705750736
    },
    "paragraphs": [
        {
            "style": "Text",
            "text": "When running custom code, users have full control of the process and there is no limit on what it can be done in terms of data manipulation. The trade off is that the user must be a developer.",
            "updated": 1621902338195
        },
        {
            "style": "Text",
            "text": "On the other hand, by running one of the available frameworks, an indicator can do powerful stuff leaving to the user the task to write only a very tiny piece of code to do the data transformations. In this case the flexibility is reduced comparing to custom code.",
            "updated": 1621705829052
        },
        {
            "style": "Note",
            "text": "You don't need to be a developer to write these code snipets, most of the time are very simple javascript code."
        },
        {
            "style": "Text",
            "text": "Here we will see examples of each use case and list all the currently available indicator frameworks users can use."
        },
        {
            "style": "Title",
            "text": "Types of Indicators Implementations"
        },
        {
            "style": "List",
            "text": "Custom Code: This means the Indicator Bot will use custom made code to handle all data transformations.",
            "updated": 1621902418790
        },
        {
            "style": "List",
            "text": "UI-Defined: This means that the Indictor Bot will base it's behaviour on the definitioins at the UI including the code snippets provided by the user.",
            "updated": 1621902442579
        },
        {
            "style": "Title",
            "text": "Custom Code Indicators",
            "updated": 1621703361583
        },
        {
            "style": "Subtitle",
            "text": "Examples"
        },
        {
            "style": "Text",
            "text": "These two indicators are currently implemented with custom code."
        },
        {
            "style": "List",
            "text": "Candles-Volumes: Located at the Master Data Mine."
        },
        {
            "style": "List",
            "text": "Bollinger-Bands: Also localted at the Master Data Mine."
        },
        {
            "style": "Subtitle",
            "text": "How to Implement them",
            "updated": 1621711303350
        },
        {
            "style": "Text",
            "text": "The way to implement a Custom Code Indicator tell the Bot at the config of the Process Definition that there is custom code for this process. Specifically, you need to add the botModule property to the config. This is how it looks like.",
            "updated": 1621902538119
        },
        {
            "style": "Json",
            "text": "{\n    \"codeName\": \"Multi-Period-Market\",\n    \"description\": \"Produces different files with multi-period candles and volumes for entire markets.\",\n    \"deadWaitTime\": 0,\n    \"normalWaitTime\": 0,\n    \"retryWaitTime\": 10000,\n    \"botModule\": \"Candles Volumes Multi Period Market\"\n}",
            "updated": 1621703524616
        },
        {
            "style": "Text",
            "text": "Then you will need to locate the Project Schema File for the project your bot belongs to. Inside of that file you will need to add some definitions in order for the system to be able to laod your new module at runtime and later execute it once users run your bot implemented in this way.",
            "updated": 1621902552523
        },
        {
            "style": "Text",
            "text": "Most likely your new Bot will be added to the Superalgos project, so you shold find the Projects Schema file inside the Projects/Superalgos folder."
        },
        {
            "style": "Text",
            "text": "The definition to be added there should look something like this:",
            "updated": 1621902599128
        },
        {
            "style": "Json",
            "text": "\"botModules\": [\n                {\n                    \"name\": \"Candles Volumes Multi Period Market\",\n                    \"propertyName\": \"candlesVolumesMultiPeriodMarket\",\n                    \"functionName\": \"newSuperalgosBotModulesCandlesVolumesMultiPeriodMarket\",\n                    \"fileName\": \"CandlesVolumesMultiPeriodMarket.js\",\n                    \"folderName\": \"Indicator-Bot/Candles-Volumes\"\n                },",
            "updated": 1621703869144
        },
        {
            "style": "Text",
            "text": "After that you will need to add to the codebase a new Javascript module with your code.",
            "updated": 1621902622372
        },
        {
            "style": "Title",
            "text": "UI-Defined Indicators",
            "updated": 1621704044375
        },
        {
            "style": "Text",
            "text": "In this case the list is long, as almost all other indicators in existence were build using a framework and defined at the UI with the minimun amount of code written by the users who created them."
        },
        {
            "style": "Subtitle",
            "text": "Indicator Frameworks",
            "updated": 1621702926075
        },
        {
            "style": "Text",
            "text": "This is the complete list of available Indicator Frameworks",
            "updated": 1621702917486
        },
        {
            "style": "List",
            "text": "From-One-Min-To-Multi-Period-Daily:  It is used to convert one Dataset from type One-Min-Daily to Multi-Period-Daily.",
            "updated": 1621703039301
        },
        {
            "style": "List",
            "text": "From-One-Min-To-Multi-Period-Market: It is used to convert one Dataset from type One-Min-Daily to Multi-Period-Market.",
            "updated": 1621703053342
        },
        {
            "style": "List",
            "text": "Multi-Period-Daily: It is used to process data currently available at a Dataset of type Multi-Period-Daily and produce as output a Dataset of the same type. How the data is going to be transformed is up to the user, since at the UI users can provide code snippets to handle the data transformation at the Data Building Procedure node.",
            "updated": 1621902697553
        },
        {
            "style": "List",
            "text": "Multi-Period-Market: It is used to process data currently available at a Dataset of type Multi-Period-Market and produce as output a Dataset of the same type. How the data is going to be transformed is up to the user, since at the UI users can provide code snippets to handle the data transformation at the Data Building Procedure node.",
            "updated": 1621902733616
        },
        {
            "style": "Subtitle",
            "text": "How to use those Frameworks",
            "updated": 1621711329707
        },
        {
            "style": "Text",
            "text": "In all cases, to use an Indicator Framework at your Indicator Bot all you need to do is to specify the framework name at the Process Definition. "
        },
        {
            "style": "Text",
            "text": "In this example, the process will use the From-One-Min-To-Multi-Period-Daily framwork."
        },
        {
            "style": "Json",
            "text": "{\n    \"codeName\": \"From-One-Min-To-Multi-Period-Daily\",\n    \"normalWaitTime\": 0,\n    \"retryWaitTime\": 10000,\n    \"framework\": {\n        \"name\": \"From-One-Min-To-Multi-Period-Daily\"\n    }\n}",
            "updated": 1621704295681
        },
        {
            "style": "Text",
            "text": "In this other example, the process will use the Multi-Period-Market framwork."
        },
        {
            "style": "Json",
            "text": "{\n    \"codeName\": \"Multi-Period-Market\",\n    \"normalWaitTime\": 0,\n    \"retryWaitTime\": 10000,\n    \"framework\": {\n        \"name\": \"Multi-Period-Market\"\n    }\n}",
            "updated": 1621704273628
        }
    ]
}